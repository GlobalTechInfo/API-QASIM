name: api-qasim

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test

  publish-npm:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set Git identity for version bump commit
      - name: Set Git identity
        run: |
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

      # Set up Node.js for npm
      - name: Set up Node.js for npm
        uses: actions/setup-node@v4
        with:
          node-version: 18
          registry-url: https://registry.npmjs.org/

      # Install dependencies
      - name: Install dependencies
        run: npm ci

      # Bump version in package.json and package-lock.json
      - name: Bump package version
        run: |
          # Bump version (patch, minor, or major)
          npm version patch

      # Publish to npm
      - name: Publish to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.npm_token }}

      # Create a new Git tag for the release, but no commit to main
      - name: Create Git tag
        run: |
          # Get version from package.json
          VERSION=$(node -p "require('./package.json').version")

          # Create a new Git tag for the release
          git tag v$VERSION

          # Push the tag to GitHub (without affecting the main branch)
          git push origin v$VERSION

      # Create GitHub release using the tag (without committing to the main branch)
      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
